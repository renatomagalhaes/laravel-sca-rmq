services:
  app:
    build:
      context: .
      dockerfile: ./docker/local/Dockerfile
    ports:
      - "80:80"
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - sca_rmq_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sca_rmq
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - sca_rmq_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-u", "root", "--password=root" ]
      interval: 15s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sca_rmq_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - sca_rmq_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 15s
      timeout: 10s
      retries: 5

volumes:
    mysql_data:
        driver: local
    redis_data:
        driver: local

networks:
  sca_rmq_network:
    driver: bridge